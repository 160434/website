%h1= ctx.team.name

- if (!ctx.editAllowed)
  %p.note
    You&rsquo;re looking at the
    %a{ href: '/' } Node.js Knockout
    team profile for
    != ' <a href="/teams/' + ctx.team.toParam() + '">' + ctx.team.name + '</a>.'

- if (ctx.editAllowed)
  - if (!ctx.currentPerson)
    %p.note
      Nice work! Your team,
      != ' <a href="/teams/' + ctx.team.toParam() + '">' + ctx.team.name + '</a>, '
      is officially registered for Node.js Knockout.
    
    %p.note
      %strong
        An invitation email with log-in information has been sent to each team member.
      All team members now need to
      %a{ href: '/login' } sign in and update their profile information.

%h2 Team Members
  %ul#members
    - each member in ctx.members
      %li
        - if (member.link)
          %a{ href: member.link }= member.name
        - if (!member.link)
          = member.name
        - if (ctx.currentPerson && member.id() === ctx.currentPerson.id())
          &nbsp;&ndash;
          %a{ href: '/people/' + member.toParam() + '/edit' } that&rsquo;s you!
    - if (ctx.invites.length && ctx.editAllowed)
      - each invite in ctx.invites
        %li
          %a{ href: 'mailto:' + invite.email }= invite.email
          invited
          &nbsp;&ndash;&nbsp;
          %a.resend{ href: '/teams/' + ctx.team.toParam() + '/invite/' + invite.toParam() } reinvite

- if (ctx.invites.length && !ctx.editAllowed)
  %p
    = pluralize(ctx.invites.length, 'outstanding invitation')

- if (ctx.editAllowed)
  %form{ method: 'POST', action: '/teams/' + ctx.team.toParam() }#delete
    %a.button{ href: '/teams/' + ctx.team.toParam() + '/edit' } Edit
    %input{ type: 'hidden', name: '_method', value: 'delete' }
    %input.button{ type: 'submit', value: 'Delete', onclick: "return confirm('Are you sure you want to delete this team?');" }

%h2 Votes
  %ul.votes
    - each vote in ctx.votes       
      %li
        .voter
          != gravatar(vote.person, 50)
          = vote.person.displayName()
          %time{ datetime: vote.createdAt.toISOString() }
        .vote
          %table.dimensions
            %tr
            - each dimension in ['Usefulness', 'Design', 'Innovation', 'Completeness']
              %td
                %label= dimension
                %br
                %input{ type: 'hidden', id: dimension.toLowerCase(), name: dimension.toLowerCase(), value: vote[dimension.toLowerCase()] || 0 }
                .stars
                  - for (var val = 1; val <= 5; val++)
                    %span.star{ 'data-value': val }
                      %span.empty ☆
                      %span.filled ★
          %p= vote.comment
          .clear
